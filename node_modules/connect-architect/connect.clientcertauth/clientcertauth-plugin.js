"use strict";

module.exports = function(options, imports, register) {

    var connect = imports.connect;

    connect.useSetup(function(req, res, next) {
        // Ensure that the certificate was validated at the protocol level
        if (!req.client.authorized) {
            var e = new Error('Unauthorized: Client certificate required ' +
                '(' + req.client.authorizationError + ')');
            e.status = 401;
            return next(e);
        }

        // Obtain certificate details
        var cert = req.connection.getPeerCertificate();
        console.log("Certificate is: %j\n", cert);
        if (!cert || !Object.keys(cert).length) {
            // Handle the bizarre and probably not-real case that a certificate was
            // validated but we can't actually inspect it
            var e = new Error('Client certificate was authenticated but certificate ' +
                'information could not be retrieved.');
            e.status = 500;
            return next(e);
        }

        var user = process.env.USER || "";
	console.log("Running user is: %s", user);

        if (user === cert.subject.CN) {
            return next();
        }
        else {
            var e = new Error('Unauthorized');
            e.status = 401;
            return next(e);
        }

    });

    console.log("Using client certificate authentication");

    register();
};

